apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

def configDir = "${project.rootDir}/config/quality"
def reportsDir = "${project.buildDir}/reports"

checkstyle {
    toolVersion '5.9'
}
task checkstyle(type: Checkstyle) {
    ignoreFailures = true
    configFile file("$configDir/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("$configDir/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task findbugs(type: FindBugs) {
    ignoreFailures = true //false:在静态代码分析检查期间遇到任何问题，构建将失败
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$configDir/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = false
        xml {
            destination (new File("$reportsDir/findbugs/findbugs.xml"))
        }
        html {
            destination (new File("$reportsDir/findbugs/findbugs.html"))
        }
    }

    classpath = files()
}

task pmd(type: Pmd) {
    ignoreFailures = true
    ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = false
        xml {
            destination (new File("$reportsDir/pmd/pmd.xml"))
        }
        html {
            destination (new File("$reportsDir/pmd/pmd.html"))
        }
    }
}

android {
    lintOptions {
        abortOnError true
        xmlReport true
        htmlReport false
        lintConfig file("$configDir/lint/lint.xml")
        htmlOutput file("$reportsDir/lint/lint-result.html")
        xmlOutput file("$reportsDir/lint/lint-result.xml")
    }
}
